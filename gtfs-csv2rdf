#!/usr/bin/env node
/* Pieter Colpaert */

/**
 * This script reads a zipped GTFS archive and maps it into RDF (text/turtle) in a streaming fashion
 */

var fs = require('fs');
var N3 = require('n3');
var N3Util = N3.util;
var mapper = require('./lib/gtfs-csv2rdf.js').zipToTriples;
var die = function (msg) {
  console.log(msg);
  process.exit();
}

//check whether the location of the zip has been set and zip exists
var path = "",
    version = "",
    baseuri = "";
if (process.argv[2]) {
  path = process.argv[2];
}else {
  die("Give a path towards your gtfs feed as a first argument");
}

if (process.argv[3]) {
  version = process.argv[3];
} else {
  die("Give the version as a second argument");
}

if (process.argv[4]) {
  baseuri = process.argv[4];
} else {
  die("Give the base uri as a second argument. Don't forget a trailing slash.");
}

if (!fs.existsSync(path)) {
  die(path + " not found");
}

//get the feedname: the name of the zip file
if (/(.*\/)?(.*?)\.zip/.exec(path)) {
  var feedname = /(.*\/)?(.*?)\.zip/.exec(path)[2];
} else {
  die ("Not a zipfile: " + path);
}

//create the writer of turtle file towards stdout
var prefixes = { 'gtfs': 'http://vocab.gtfs.org/terms#',
                 'rdf': 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
                 'foaf' : 'http://xmlns.com/foaf/0.1/',
                 'dct' : 'http://purl.org/dc/terms/',
                 'rdfs' : 'http://www.w3.org/2000/01/rdf-schema#',
                 'owl' : 'http://www.w3.org/2002/07/owl#',
                 'xsd' : 'http://www.w3.org/2001/XMLSchema#',
                 'vann' : 'http://purl.org/vocab/vann/',
                 'skos' : 'http://www.w3.org/2004/02/skos/core#',
                 'gtfs' : 'http://vocab.gtfs.org/terms#',
                 'schema' : "http://schema.org/",
                 'dcat' : 'http://www.w3.org/ns/dcat#'};

var streamWriter = new N3.StreamWriter(prefixes);
streamWriter.pipe(process.stdout);

mapper(fs.createReadStream(path), streamWriter, {
  feedname: feedname,
  version :  version,
  baseuri : baseuri
});
